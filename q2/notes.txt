alternating low/high
all lows:
3C 1D 0F 0D 0B 1D 07 4E 57 57 0F 4E 1C 00 0B 01 4E 00 18 1C 07 17 1A 1C 0B 4E 4E 07 07 09 0D 1A 07 1A 4E 4E 0B 0B 06 00 63

Increase all values until valid text
Nothing

Convert to decimal

060 145 029 145 015 134 013 156 011 134 029 212 007 154 078 197
087 198 087 212 015 128 078 164 028 157 000 151 011 128 001 154
078 161 000 157 024 145 028 135 007 128 023 212 026 129 028 154
011 144 078 149 078 152 007 130 007 154 009 212 013 149 026 212
007 154 026 155 078 149 078 128 011 152 011 132 006 155 000 145
099 254

min, max vals:
0, 99 (odd)
128, 254 (even)

binary:



and, or, xor in pairs: nothing
lsb: nothing
flip bit 1 of even vals: nothing

treat odd/even vals as 2 alphabets
map each distinct byte to a letter
